//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""4f71ed98-ee03-4941-b946-5db80a7b9fec"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""PassThrough"",
                    ""id"": ""748b8514-be5f-4ea6-9c7d-644ec87f3c3b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""9c6be78c-9412-4b0e-af74-e32170659c08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b4f2215b-baff-448f-aef8-234c8c39b4ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""91c50f0b-8b07-44ab-95f0-92b594afb6e2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cda51f1a-8786-4977-897c-870e814a0ff1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""deea6027-f097-49b7-86b4-4fa93c1fb70c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d47f7bf5-0d70-4e2d-8138-a644f50dfcb6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""301de058-f92e-4e9f-974e-37043fcff34a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cc036e2d-b96a-4274-b093-9512582b8f13"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89266351-bdab-4433-a0ce-baa3f6280a24"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Action"",
            ""id"": ""46747fb8-3505-45f5-85cd-6c3dba0713ad"",
            ""actions"": [
                {
                    ""name"": ""Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""cddb36ea-8609-4ff4-8965-773dde43b5c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""5818d944-d05a-4a74-aa14-919063525ce2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Weapon3"",
                    ""type"": ""Button"",
                    ""id"": ""7a476f06-cb74-4cf1-b690-764b46601a1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Weapon4"",
                    ""type"": ""Button"",
                    ""id"": ""fdbe99dc-b7a7-4d55-afea-6c7b00d6bc2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Weapon5"",
                    ""type"": ""Button"",
                    ""id"": ""0787217f-0d25-4ab8-aba6-c8ecca67fbb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Weapon6"",
                    ""type"": ""Button"",
                    ""id"": ""8cf966de-d81d-41a8-b9cb-51a39b10f637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Falcula"",
                    ""type"": ""Button"",
                    ""id"": ""ccdf359b-2a26-480d-abfd-1857811371d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""7816119a-8276-46ed-97a1-1ccbf20e78d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""546ba7a6-e8b5-49c8-9398-6fb629fafe42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponWheel"",
                    ""type"": ""Button"",
                    ""id"": ""4507e55f-9280-46a7-bf99-66141cca40f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""7f43c9fa-b132-4626-b398-aa6459d1afa3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponAbility"",
                    ""type"": ""Button"",
                    ""id"": ""e6500c30-1236-4748-a4d4-3dece8b5f8aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""e7d073ae-77c1-4349-81ea-884d1af8e3a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""a3f56b7a-ba5e-49eb-9b40-78f5e8ad119c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0c108f65-0fb6-472b-bd07-8482eb71f7aa"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e64da281-667b-475b-afaf-a113b0dcb62e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4753503b-ab88-48da-88d3-0ea110ed901c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""277643fd-9d03-4728-a233-4f5ba18d1c24"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49db8a86-8392-49ba-892d-d102bcae1a49"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73d144f1-d3ec-470c-be25-f03a4d86bf81"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdd41a90-a912-4753-ae81-f2e4d44f23ed"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Falcula"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85893073-b478-4c20-b5be-9575461b2419"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87626f84-a8d6-4a0c-9284-2b9983cce778"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""103b49bf-6cd8-47b1-a7ab-ffbcedb6baa9"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdaa3c52-adc3-4b33-8495-a249f764eec3"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4974b581-ec4a-4b49-b5ca-5d8e78044167"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0109a926-4908-4568-8518-eeacda1e3db4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e190de16-c420-464e-9ac8-cb6e7fe18e4a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameAction"",
            ""id"": ""687f4948-6c26-4475-b762-c050e6506753"",
            ""actions"": [
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""1ebac825-6733-4355-bae2-bb9dbda95f18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5e0db5aa-5a8a-453c-9478-cc017b291a7c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_Walk = m_PlayerMovement.FindAction("Walk", throwIfNotFound: true);
        m_PlayerMovement_Jump = m_PlayerMovement.FindAction("Jump", throwIfNotFound: true);
        m_PlayerMovement_Camera = m_PlayerMovement.FindAction("Camera", throwIfNotFound: true);
        // Player Action
        m_PlayerAction = asset.FindActionMap("Player Action", throwIfNotFound: true);
        m_PlayerAction_Weapon1 = m_PlayerAction.FindAction("Weapon1", throwIfNotFound: true);
        m_PlayerAction_Weapon2 = m_PlayerAction.FindAction("Weapon2", throwIfNotFound: true);
        m_PlayerAction_Weapon3 = m_PlayerAction.FindAction("Weapon3", throwIfNotFound: true);
        m_PlayerAction_Weapon4 = m_PlayerAction.FindAction("Weapon4", throwIfNotFound: true);
        m_PlayerAction_Weapon5 = m_PlayerAction.FindAction("Weapon5", throwIfNotFound: true);
        m_PlayerAction_Weapon6 = m_PlayerAction.FindAction("Weapon6", throwIfNotFound: true);
        m_PlayerAction_Falcula = m_PlayerAction.FindAction("Falcula", throwIfNotFound: true);
        m_PlayerAction_Shoot = m_PlayerAction.FindAction("Shoot", throwIfNotFound: true);
        m_PlayerAction_Dodge = m_PlayerAction.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerAction_WeaponWheel = m_PlayerAction.FindAction("WeaponWheel", throwIfNotFound: true);
        m_PlayerAction_Reload = m_PlayerAction.FindAction("Reload", throwIfNotFound: true);
        m_PlayerAction_WeaponAbility = m_PlayerAction.FindAction("WeaponAbility", throwIfNotFound: true);
        m_PlayerAction_Interact = m_PlayerAction.FindAction("Interact", throwIfNotFound: true);
        m_PlayerAction_Map = m_PlayerAction.FindAction("Map", throwIfNotFound: true);
        // GameAction
        m_GameAction = asset.FindActionMap("GameAction", throwIfNotFound: true);
        m_GameAction_Menu = m_GameAction.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Walk;
    private readonly InputAction m_PlayerMovement_Jump;
    private readonly InputAction m_PlayerMovement_Camera;
    public struct PlayerMovementActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerMovementActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_PlayerMovement_Walk;
        public InputAction @Jump => m_Wrapper.m_PlayerMovement_Jump;
        public InputAction @Camera => m_Wrapper.m_PlayerMovement_Camera;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnWalk;
                @Jump.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Camera.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Action
    private readonly InputActionMap m_PlayerAction;
    private IPlayerActionActions m_PlayerActionActionsCallbackInterface;
    private readonly InputAction m_PlayerAction_Weapon1;
    private readonly InputAction m_PlayerAction_Weapon2;
    private readonly InputAction m_PlayerAction_Weapon3;
    private readonly InputAction m_PlayerAction_Weapon4;
    private readonly InputAction m_PlayerAction_Weapon5;
    private readonly InputAction m_PlayerAction_Weapon6;
    private readonly InputAction m_PlayerAction_Falcula;
    private readonly InputAction m_PlayerAction_Shoot;
    private readonly InputAction m_PlayerAction_Dodge;
    private readonly InputAction m_PlayerAction_WeaponWheel;
    private readonly InputAction m_PlayerAction_Reload;
    private readonly InputAction m_PlayerAction_WeaponAbility;
    private readonly InputAction m_PlayerAction_Interact;
    private readonly InputAction m_PlayerAction_Map;
    public struct PlayerActionActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActionActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Weapon1 => m_Wrapper.m_PlayerAction_Weapon1;
        public InputAction @Weapon2 => m_Wrapper.m_PlayerAction_Weapon2;
        public InputAction @Weapon3 => m_Wrapper.m_PlayerAction_Weapon3;
        public InputAction @Weapon4 => m_Wrapper.m_PlayerAction_Weapon4;
        public InputAction @Weapon5 => m_Wrapper.m_PlayerAction_Weapon5;
        public InputAction @Weapon6 => m_Wrapper.m_PlayerAction_Weapon6;
        public InputAction @Falcula => m_Wrapper.m_PlayerAction_Falcula;
        public InputAction @Shoot => m_Wrapper.m_PlayerAction_Shoot;
        public InputAction @Dodge => m_Wrapper.m_PlayerAction_Dodge;
        public InputAction @WeaponWheel => m_Wrapper.m_PlayerAction_WeaponWheel;
        public InputAction @Reload => m_Wrapper.m_PlayerAction_Reload;
        public InputAction @WeaponAbility => m_Wrapper.m_PlayerAction_WeaponAbility;
        public InputAction @Interact => m_Wrapper.m_PlayerAction_Interact;
        public InputAction @Map => m_Wrapper.m_PlayerAction_Map;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterface != null)
            {
                @Weapon1.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon1;
                @Weapon1.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon1;
                @Weapon1.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon1;
                @Weapon2.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon2;
                @Weapon2.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon2;
                @Weapon2.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon2;
                @Weapon3.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon3;
                @Weapon3.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon3;
                @Weapon3.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon3;
                @Weapon4.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon4;
                @Weapon4.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon4;
                @Weapon4.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon4;
                @Weapon5.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon5;
                @Weapon5.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon5;
                @Weapon5.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon5;
                @Weapon6.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon6;
                @Weapon6.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon6;
                @Weapon6.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeapon6;
                @Falcula.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnFalcula;
                @Falcula.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnFalcula;
                @Falcula.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnFalcula;
                @Shoot.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnShoot;
                @Dodge.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnDodge;
                @WeaponWheel.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponWheel;
                @WeaponWheel.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponWheel;
                @WeaponWheel.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponWheel;
                @Reload.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @WeaponAbility.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponAbility;
                @WeaponAbility.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponAbility;
                @WeaponAbility.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnWeaponAbility;
                @Interact.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @Map.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMap;
                @Map.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMap;
                @Map.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnMap;
            }
            m_Wrapper.m_PlayerActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Weapon1.started += instance.OnWeapon1;
                @Weapon1.performed += instance.OnWeapon1;
                @Weapon1.canceled += instance.OnWeapon1;
                @Weapon2.started += instance.OnWeapon2;
                @Weapon2.performed += instance.OnWeapon2;
                @Weapon2.canceled += instance.OnWeapon2;
                @Weapon3.started += instance.OnWeapon3;
                @Weapon3.performed += instance.OnWeapon3;
                @Weapon3.canceled += instance.OnWeapon3;
                @Weapon4.started += instance.OnWeapon4;
                @Weapon4.performed += instance.OnWeapon4;
                @Weapon4.canceled += instance.OnWeapon4;
                @Weapon5.started += instance.OnWeapon5;
                @Weapon5.performed += instance.OnWeapon5;
                @Weapon5.canceled += instance.OnWeapon5;
                @Weapon6.started += instance.OnWeapon6;
                @Weapon6.performed += instance.OnWeapon6;
                @Weapon6.canceled += instance.OnWeapon6;
                @Falcula.started += instance.OnFalcula;
                @Falcula.performed += instance.OnFalcula;
                @Falcula.canceled += instance.OnFalcula;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @WeaponWheel.started += instance.OnWeaponWheel;
                @WeaponWheel.performed += instance.OnWeaponWheel;
                @WeaponWheel.canceled += instance.OnWeaponWheel;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @WeaponAbility.started += instance.OnWeaponAbility;
                @WeaponAbility.performed += instance.OnWeaponAbility;
                @WeaponAbility.canceled += instance.OnWeaponAbility;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Map.started += instance.OnMap;
                @Map.performed += instance.OnMap;
                @Map.canceled += instance.OnMap;
            }
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);

    // GameAction
    private readonly InputActionMap m_GameAction;
    private IGameActionActions m_GameActionActionsCallbackInterface;
    private readonly InputAction m_GameAction_Menu;
    public struct GameActionActions
    {
        private @PlayerInput m_Wrapper;
        public GameActionActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Menu => m_Wrapper.m_GameAction_Menu;
        public InputActionMap Get() { return m_Wrapper.m_GameAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActionActions set) { return set.Get(); }
        public void SetCallbacks(IGameActionActions instance)
        {
            if (m_Wrapper.m_GameActionActionsCallbackInterface != null)
            {
                @Menu.started -= m_Wrapper.m_GameActionActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_GameActionActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_GameActionActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_GameActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public GameActionActions @GameAction => new GameActionActions(this);
    public interface IPlayerMovementActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
    }
    public interface IPlayerActionActions
    {
        void OnWeapon1(InputAction.CallbackContext context);
        void OnWeapon2(InputAction.CallbackContext context);
        void OnWeapon3(InputAction.CallbackContext context);
        void OnWeapon4(InputAction.CallbackContext context);
        void OnWeapon5(InputAction.CallbackContext context);
        void OnWeapon6(InputAction.CallbackContext context);
        void OnFalcula(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnWeaponWheel(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnWeaponAbility(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
    }
    public interface IGameActionActions
    {
        void OnMenu(InputAction.CallbackContext context);
    }
}
